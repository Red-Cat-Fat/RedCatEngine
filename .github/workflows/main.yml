name: Actions ðŸ˜Ž
on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - run: yarn
      - run: yarn lint
      - run: yarn test
      - run: yarn build || { echo "build command should always succeed" ; exit 61; }
  #      - run: yarn build --quiet && git diff --quiet action || { echo "ERROR - index.js is different from repository version. Forgot to run `yarn build`?" ; exit 62; }

  testRunnerInAllModes:
    name: Test all modes âœ¨
    runs-on: ${{ matrix.baseRunner }}
    strategy:
      fail-fast: false
      matrix:
        baseRunner:
          - ubuntu-latest
          - windows-2022
        projectPath:
          - RedCatEngineUnityProject
        unityVersion:
          - 2021.3.31f1
          - 2021.3.31f1
    steps:
      ###########################
      #         Checkout        #
      ###########################
      - uses: actions/checkout@v4
        with:
          lfs: true

      ###########################
      #          Cache          #
      ###########################
      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.baseRunner }}-${{ matrix.projectPath }}
          restore-keys: |
            Library-${{ matrix.baseRunner }}

      # Configure test runner
      - name: Run tests
        id: allTests
        uses: ./
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: all
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+MyScripts;dontClear'
          # Test implicit artifactsPath, by not setting it

      # Upload artifacts
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Test results (all) (${{ matrix.baseRunner }}, ${{ matrix.unityVersion }})
          path: ${{ steps.allTests.outputs.artifactsPath }}
          retention-days: 14

      # Upload coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: Coverage results (all) (${{ matrix.baseRunner }}, ${{ matrix.unityVersion }})
          path: ${{ steps.allTests.outputs.coveragePath }}
          retention-days: 14
  
  testDependencyInjectionPackageRunnerInAllModes:
    name: Test Dependency Injection package in all modes ðŸ“¦âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - RedCatEngineUnityProject\Packages\DependencyInjection
        unityVersion:
          - 2021.3.31f1
          - 2021.3.31f1
    steps:
      ###########################
      #         Checkout        #
      ###########################
      - uses: actions/checkout@v4
        with:
          lfs: true

      # Configure test runner
      - name: Run tests
        id: packageAllTests
        uses: ./
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: all
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+example.testpackage.*,-*Tests*'
          packageMode: true
          # Test implicit artifactsPath, by not setting it

      # Upload artifacts
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Package test results (all) (${{ matrix.unityVersion }})
          path: ${{ steps.packageAllTests.outputs.artifactsPath }}
          retention-days: 14

      # Upload coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: Package Coverage results (all) (${{ matrix.unityVersion }})
          path: ${{ steps.packageAllTests.outputs.coveragePath }}
          retention-days: 14
          
  testStateMachinePackageRunnerInAllModes:
    name: Test State Machine package in all modes ðŸ“¦âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - RedCatEngineUnityProject\Packages\StateMachine
        unityVersion:
          - 2021.3.31f1
          - 2021.3.31f1
    steps:
      ###########################
      #         Checkout        #
      ###########################
      - uses: actions/checkout@v4
        with:
          lfs: true

      # Configure test runner
      - name: Run tests
        id: packageAllTests
        uses: ./
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: all
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+example.testpackage.*,-*Tests*'
          packageMode: true
          # Test implicit artifactsPath, by not setting it

      # Upload artifacts
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Package test results (all) (${{ matrix.unityVersion }})
          path: ${{ steps.packageAllTests.outputs.artifactsPath }}
          retention-days: 14

      # Upload coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: Package Coverage results (all) (${{ matrix.unityVersion }})
          path: ${{ steps.packageAllTests.outputs.coveragePath }}
          retention-days: 14
